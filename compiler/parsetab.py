
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA CONNECT DIVIDE EQ EXP GE GT IF LE LPAREN LT MINUS NE NUMBER PLUS RPAREN SETTO STRING TIMES VARIABLE\n    assignment : VARIABLE SETTO expression\n    \n    assignment : VARIABLE SETTO flow\n    \n    flow : VARIABLE CONNECT flow_functions\n    \n    flow_functions : flow_function_call CONNECT flow_functions\n    \n    flow_functions : flow_function_call\n    \n    flow_function_call : VARIABLE LPAREN params RPAREN\n     assignment : expression\n    \n    expression : expression PLUS term\n    \n    expression : expression MINUS term\n    \n    expression : term \n                | string\n    \n    string : STRING\n    \n    term : term TIMES exponent\n    \n    term : term DIVIDE exponent\n    \n    term : exponent\n    \n    exponent : factor EXP factor\n    \n    exponent : factor\n    \n    exponent : LPAREN expression RPAREN\n     factor : NUMBER\n     factor : VARIABLE\n    \n    expression : expression GT expression\n    \n    expression : expression LT expression\n    \n    expression : expression GE expression\n    \n    expression : expression LE expression\n    \n    expression : expression EQ expression\n    \n    expression : expression NE expression\n    \n    factor : function_call\n    \n    function_call : VARIABLE LPAREN  RPAREN\n    \n    function_call : VARIABLE LPAREN params RPAREN\n    \n    params : params COMMA expression \n            | expression\n    expression : IF LPAREN expression RPAREN COLON expression'
    
_lr_action_items = {'VARIABLE':([0,7,13,14,15,16,17,18,19,20,21,22,23,24,25,28,48,50,56,57,58,],[2,27,29,27,27,27,27,27,27,27,27,27,27,27,27,27,52,27,27,27,52,]),'IF':([0,7,13,14,17,18,19,20,21,22,25,50,56,57,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'STRING':([0,7,13,14,17,18,19,20,21,22,25,50,56,57,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LPAREN':([0,2,6,7,13,14,15,16,17,18,19,20,21,22,23,24,25,27,29,50,52,56,57,],[7,14,25,7,7,7,7,7,7,7,7,7,7,7,7,7,7,14,14,7,57,7,7,]),'NUMBER':([0,7,13,14,15,16,17,18,19,20,21,22,23,24,25,28,50,56,57,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'$end':([1,2,3,4,5,8,9,10,11,12,27,29,30,31,32,35,36,37,38,39,40,41,42,43,44,46,47,49,53,54,59,61,62,],[0,-20,-7,-10,-11,-15,-12,-17,-19,-27,-20,-20,-1,-2,-28,-8,-9,-21,-22,-23,-24,-25,-26,-13,-14,-18,-16,-29,-3,-5,-32,-4,-6,]),'SETTO':([2,],[13,]),'EXP':([2,10,11,12,27,29,32,49,],[-20,28,-19,-27,-20,-20,-28,-29,]),'TIMES':([2,4,8,10,11,12,27,29,32,35,36,43,44,46,47,49,],[-20,23,-15,-17,-19,-27,-20,-20,-28,23,23,-13,-14,-18,-16,-29,]),'DIVIDE':([2,4,8,10,11,12,27,29,32,35,36,43,44,46,47,49,],[-20,24,-15,-17,-19,-27,-20,-20,-28,24,24,-13,-14,-18,-16,-29,]),'PLUS':([2,3,4,5,8,9,10,11,12,26,27,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,55,59,],[-20,15,-10,-11,-15,-12,-17,-19,-27,15,-20,-20,15,-28,15,-8,-9,15,15,15,15,15,15,-13,-14,15,-18,-16,-29,15,15,]),'MINUS':([2,3,4,5,8,9,10,11,12,26,27,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,55,59,],[-20,16,-10,-11,-15,-12,-17,-19,-27,16,-20,-20,16,-28,16,-8,-9,16,16,16,16,16,16,-13,-14,16,-18,-16,-29,16,16,]),'GT':([2,3,4,5,8,9,10,11,12,26,27,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,55,59,],[-20,17,-10,-11,-15,-12,-17,-19,-27,17,-20,-20,17,-28,17,-8,-9,17,17,17,17,17,17,-13,-14,17,-18,-16,-29,17,17,]),'LT':([2,3,4,5,8,9,10,11,12,26,27,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,55,59,],[-20,18,-10,-11,-15,-12,-17,-19,-27,18,-20,-20,18,-28,18,-8,-9,18,18,18,18,18,18,-13,-14,18,-18,-16,-29,18,18,]),'GE':([2,3,4,5,8,9,10,11,12,26,27,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,55,59,],[-20,19,-10,-11,-15,-12,-17,-19,-27,19,-20,-20,19,-28,19,-8,-9,19,19,19,19,19,19,-13,-14,19,-18,-16,-29,19,19,]),'LE':([2,3,4,5,8,9,10,11,12,26,27,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,55,59,],[-20,20,-10,-11,-15,-12,-17,-19,-27,20,-20,-20,20,-28,20,-8,-9,20,20,20,20,20,20,-13,-14,20,-18,-16,-29,20,20,]),'EQ':([2,3,4,5,8,9,10,11,12,26,27,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,55,59,],[-20,21,-10,-11,-15,-12,-17,-19,-27,21,-20,-20,21,-28,21,-8,-9,21,21,21,21,21,21,-13,-14,21,-18,-16,-29,21,21,]),'NE':([2,3,4,5,8,9,10,11,12,26,27,29,30,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,55,59,],[-20,22,-10,-11,-15,-12,-17,-19,-27,22,-20,-20,22,-28,22,-8,-9,22,22,22,22,22,22,-13,-14,22,-18,-16,-29,22,22,]),'RPAREN':([4,5,8,9,10,11,12,14,26,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,55,59,60,],[-10,-11,-15,-12,-17,-19,-27,32,46,-20,-28,49,-31,-8,-9,-21,-22,-23,-24,-25,-26,-13,-14,51,-18,-16,-29,-30,-32,62,]),'COMMA':([4,5,8,9,10,11,12,27,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,49,55,59,60,],[-10,-11,-15,-12,-17,-19,-27,-20,-28,50,-31,-8,-9,-21,-22,-23,-24,-25,-26,-13,-14,-18,-16,-29,-30,-32,50,]),'CONNECT':([29,54,62,],[48,58,-6,]),'COLON':([51,],[56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignment':([0,],[1,]),'expression':([0,7,13,14,17,18,19,20,21,22,25,50,56,57,],[3,26,30,34,37,38,39,40,41,42,45,55,59,34,]),'term':([0,7,13,14,15,16,17,18,19,20,21,22,25,50,56,57,],[4,4,4,4,35,36,4,4,4,4,4,4,4,4,4,4,]),'string':([0,7,13,14,17,18,19,20,21,22,25,50,56,57,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'exponent':([0,7,13,14,15,16,17,18,19,20,21,22,23,24,25,50,56,57,],[8,8,8,8,8,8,8,8,8,8,8,8,43,44,8,8,8,8,]),'factor':([0,7,13,14,15,16,17,18,19,20,21,22,23,24,25,28,50,56,57,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,47,10,10,10,]),'function_call':([0,7,13,14,15,16,17,18,19,20,21,22,23,24,25,28,50,56,57,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'flow':([13,],[31,]),'params':([14,57,],[33,60,]),'flow_functions':([48,58,],[53,61,]),'flow_function_call':([48,58,],[54,54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> assignment","S'",1,None,None,None),
  ('assignment -> VARIABLE SETTO expression','assignment',3,'p_assignment_assign','translator3.py',132),
  ('assignment -> VARIABLE SETTO flow','assignment',3,'p_assignment_flow','translator3.py',145),
  ('flow -> VARIABLE CONNECT flow_functions','flow',3,'p_flow_form','translator3.py',152),
  ('flow_functions -> flow_function_call CONNECT flow_functions','flow_functions',3,'p_flow_functions','translator3.py',158),
  ('flow_functions -> flow_function_call','flow_functions',1,'p_flow_function','translator3.py',164),
  ('flow_function_call -> VARIABLE LPAREN params RPAREN','flow_function_call',4,'p_flow_function_call','translator3.py',170),
  ('assignment -> expression','assignment',1,'p_assignment_expression','translator3.py',178),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','translator3.py',186),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','translator3.py',198),
  ('expression -> term','expression',1,'p_expression_term','translator3.py',210),
  ('expression -> string','expression',1,'p_expression_term','translator3.py',211),
  ('string -> STRING','string',1,'p_string_def','translator3.py',217),
  ('term -> term TIMES exponent','term',3,'p_term_times','translator3.py',225),
  ('term -> term DIVIDE exponent','term',3,'p_term_divide','translator3.py',236),
  ('term -> exponent','term',1,'p_term_exponent','translator3.py',246),
  ('exponent -> factor EXP factor','exponent',3,'p_exponent_exp','translator3.py',252),
  ('exponent -> factor','exponent',1,'p_exponent_factor','translator3.py',262),
  ('exponent -> LPAREN expression RPAREN','exponent',3,'p_exponent_parent','translator3.py',268),
  ('factor -> NUMBER','factor',1,'p_factor_num','translator3.py',277),
  ('factor -> VARIABLE','factor',1,'p_factor_id','translator3.py',284),
  ('expression -> expression GT expression','expression',3,'p_expression_GT','translator3.py',292),
  ('expression -> expression LT expression','expression',3,'p_expression_LT','translator3.py',303),
  ('expression -> expression GE expression','expression',3,'p_expression_GE','translator3.py',314),
  ('expression -> expression LE expression','expression',3,'p_expression_LE','translator3.py',325),
  ('expression -> expression EQ expression','expression',3,'p_expression_EQ','translator3.py',336),
  ('expression -> expression NE expression','expression',3,'p_expression_NE','translator3.py',347),
  ('factor -> function_call','factor',1,'p_factor_function_call','translator3.py',363),
  ('function_call -> VARIABLE LPAREN RPAREN','function_call',3,'p_function_call_no_params','translator3.py',370),
  ('function_call -> VARIABLE LPAREN params RPAREN','function_call',4,'p_function_call_params','translator3.py',377),
  ('params -> params COMMA expression','params',3,'p_params','translator3.py',386),
  ('params -> expression','params',1,'p_params','translator3.py',387),
  ('expression -> IF LPAREN expression RPAREN COLON expression','expression',6,'p_expression_if','translator3.py',397),
]
